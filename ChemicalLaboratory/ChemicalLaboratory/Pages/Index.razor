@page "/"
@using Data;
@inject IJSRuntime JS;
@inject ISnackbar Snackbar;
@using Radzen.Blazor;
@inject Radzen.NotificationService NotificationService;
@inject CurrentUser currentUser;
@inject NavigationManager navigation;

<PageTitle>Авторизация</PageTitle>

<div style="mix-blend-mode: normal; background-color: rgba(255, 255, 255, 1); align-items: inherit; align-items: flex-start; justify-content: flex-start">
    <div class="logo">
        
    </div>
    <div style=" mix-blend-mode: normal;  position: absolute; left: 50%; transform: translate(-50%, 30%); ">
        <p class="pStyleLogo">
            ChemicalLab
        </p>
    </div>
    <div class="boxOne"></div>
    <div class="boxTwo">
        <br />
        <label class="labelStyle">
            Логин
        </label>
        <input @bind-value="login" type="text" placeholder="Введите логин" class="inputStyle">
        <br />
        <br />
        <label class="labelStyle">
            Пароль
        </label>
        <input @bind-value="password" type="password" placeholder="Введите пароль" class="inputStyle">
        <br />
        <br />
        <br />
        <br/>
        <button class="buttonStyle" @onclick="Login">
            <b class="bStyleButton">
                Войти
            </b>
        </button>
    </div>
</div>


@code 
{
    string? login;
    string? password;

    public void Login()
    {
        if (login != null && password != null)
        {
            var user = DBConnection.FindUserByLogin(login);

            if (user != null && user.Password == password)
            {
                currentUser.CurrentUserData = user;

                Snackbar.Add("Успешно", Severity.Success);

                switch (currentUser.CurrentUserData.RoleName)
                {
                    case "Администратор":
                        navigation.NavigateTo("/admin");
                        break;
                    case "Лаборант":
                        navigation.NavigateTo("/labWorker");
                        break;
                    case "Заведующий":
                        navigation.NavigateTo("/labManager");
                        break;
                }
            }
            else
            {
                Snackbar.Add("Пользователь с такими данными не существует.", Severity.Error);
            }
        }
        else
        {
            Snackbar.Add("Заполните все поля.", Severity.Error);
        }
    }

    void ShowNotification(Radzen.NotificationMessage message)
    {
        NotificationService.Notify(message);
    }
}

<style>
    .buttonStyle{
        box-shadow: rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px, rgba(17, 17, 26, 0.1) 0px 24px 80px;
        width: 100%;
        mix-blend-mode: normal;
        align-items: inherit;
        border-radius: 15px;
        background-color: white
    }
    .bStyleButton{
        letter-spacing: 0;
        text-transform: none;
        text-align: center;
        font-family: Playfair Display;
        font-size: 28px;
        color: rgba(104, 109, 238, 0.8)
    }
    .boxOne{
        box-shadow: rgba(0, 0, 0, 0.56) 0px 22px 70px 4px;
        mix-blend-mode: normal;
        position: absolute;
        left: 52%;
        transform: translate(-48%, 25%);
        background-color: rgba(0, 0, 0, 0.2);
        width: 30%;
        align-items: inherit;
        gap: 10px;
        padding-left: 10px;
        height: 360%;
        padding-right: 10px;
        padding-top: 10px;
        padding-bottom: 10px;
        border-radius: 20px;
        align-items: flex-start;
        justify-content: flex-start
    }
    .boxTwo{
        box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;
        mix-blend-mode: normal;
        position: absolute;
        left: 50%;
        transform: translate(-50%, 40%);
        background-color: rgba(104, 109, 238, 0.8);
        width: 30%;
        align-items: inherit;
        gap: 10px;
        padding-left: 10px;
        height: 360%;
        padding-right: 10px;
        padding-top: 10px;
        padding-bottom: 10px;
        border-radius: 20px;
        align-items: flex-start;
        justify-content: flex-start
    }
    .logo{
        position: relative;
        mix-blend-mode: normal;
        align-items: inherit;
        background-image: url('/images/image3.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        width: 50px;
        height: 75px
    }
    .pStyleLogo{
        letter-spacing: 0;
        text-transform: none;
        text-align: center;
        vertical-align: middle;
        font-family: Playfair Display;
        font-size: 64px;
        color: rgba(0, 0, 0, 1);
        font-weight: 400;
        width: 100%
    }
    .inputStyle{
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);
        font-size: 24px;
        background-color: rgb(233, 231, 254);
        font-family: Playfair Display;
        width: 100%;
        mix-blend-mode: normal;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        align-items: inherit;
        border-radius: 10px
    }
    .labelStyle{
        letter-spacing: 0;
        text-transform: none;
        text-align: left;
        vertical-align: middle;
        font-family: Playfair Display;
        font-size: 28px;
        color: rgba(255, 255, 255, 1);
        font-weight: 400;
        width: 100%
    }

    .buttonStyle:hover {
        box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
        transform: translateY(-2px);
    }
    .button-27:hover {
      box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
      transform: translateY(-2px);
    }
</style>
