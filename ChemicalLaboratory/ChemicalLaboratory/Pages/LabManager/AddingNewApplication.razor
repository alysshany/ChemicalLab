@page "/labManagerAddingApplication"
@using Data;
@inject IJSRuntime JS;
@inject ISnackbar Snackbar;
@inject Radzen.NotificationService NotificationService;
@inject NavigationManager navigation;
@inject DepositData depositData;
@inject DefinedIndicatorData definedIndicatorData;
@inject MethodData methodData;

<PageTitle>Добавление заявки на анализ</PageTitle>


<div style="opacity: 1; mix-blend-mode: normal; background-color: rgba(255, 255, 255, 1); align-items: inherit; align-items: flex-start; justify-content: flex-start">
    <button class="buttonOne" @onclick="NavigationToHomePage">
        <p class="pStyleOfButton">
            Домашняя страница
        </p>
    </button>
    <button class="buttonTwo" @onclick="NavigationToAddingNewTask">
        <p class="pStyleOfButton">
            Новое задание
        </p>
    </button>
    <button class="buttonThree" @onclick="NavigationToViewAllAnalyzes">
        <p class="pStyleOfButton">
            Пробы
        </p>
    </button>
    <div class="icon"></div>
    <div class="boxOne"></div>
    <div class="boxTwo">
        <div style="flex: 10%;"></div>
        <div style="flex: 45%; margin-top: 4%">
            <br />
            <label class="labelStyle">
                Объект исследования: 
            </label>
            <select @onchange="TypeChange" name="role" class="selectStyle">
                <option value="-">-</option>
                <option value="Вода">Проба воды</option>
                <option value="Нефть">Проба нефти</option>
            </select>
            <label class="labelStyle">
                Название:
            </label>
            <input @bind-value="title" type="text" placeholder="Введите задание" class="inputStyle">
            <label class="labelStyle">
                Месторождение: 
            </label>
            <select @onchange="DepositChange" name="deposit" class="selectStyle">
                <option value="-">-</option>
                @foreach (var dep in deposit)
                {
                    <option value="@dep">@dep</option>
                }
            </select>
            <label class="labelStyle">
                Определяемый показатель: 
            </label>
            <select @onchange="IndicatorChange" name="indicator" class="selectStyle">
                <option value="-">-</option>
                @foreach (var indicator in indicators)
                {
                    <option value="@indicator">@indicator</option>
                }
            </select>
            <label class="labelStyle">
                Метод: @method
            </label>
        </div>

        <div style="flex: 45%; margin-top: 4%"></div>

        <button class="savingButton" @onclick="AddingApplication">
            <p class="pStyleOfSavingButton">
                Сохранить
            </p>
        </button>
    </div>
</div>

@code{
    string? title;
    string? type;
    string? indicator;
    string? method;
    string? depositActual;

    List<string> deposit;
    List<string> indicators;
    protected override void OnInitialized()
    {
        deposit = new List<string>()
        {
            ""
        }; 

        indicators = new List<string>()
        {
            ""
        }; 

    }

    public void AddingApplication()
    {
        if (title != null && indicator != "-" && depositActual != "-" && type != null && indicator != null && method != null && depositActual != null)
        {
            if (DBConnection.FindAnalyzeByTitle(title) == null)
            {
                AnalyzeData newApplication = new AnalyzeData()
                {
                    Title = title,
                    Type = type,
                    DefinedIndicatorData = indicator,
                    Deposit = depositActual,
                    MethodData = method

                };

                DBConnection.AddAnalyzeToDataBase(newApplication);

                Snackbar.Add("Заявка добавлена", Severity.Success);
            }
            else
            {
                Snackbar.Add("Заявка на анализ с таким наименованием уже существует.", Severity.Error);
                //ShowNotification(new Radzen.NotificationMessage { Severity = Radzen.NotificationSeverity.Error, Summary = "Ошибка", Detail = "Заявка на анализ с таким наименованием уже существует.", Duration = 4000 });
                //JS.InvokeVoidAsync("alert", "Заявка на анализ с таким наименованием уже существует.");
            }
        }
        else
        {
            Snackbar.Add("Не все поля заполнены корректно.", Severity.Error);
            //ShowNotification(new Radzen.NotificationMessage { Severity = Radzen.NotificationSeverity.Error, Summary = "Ошибка", Detail = "Не все поля заполнены корректно.", Duration = 4000 });
            //JS.InvokeVoidAsync("alert", "Не все поля заполнены корректно.");
        }
    }

    public void TypeChange(ChangeEventArgs e)
    {
        if (e.Value is not null)
        {
            type = e.Value.ToString();

            switch (type)
            {
                case "Вода":
                    deposit = depositData.depositOfWater;

                    indicators = definedIndicatorData.indicatorOfWater;

                    break;
                case "Нефть":
                    deposit = depositData.depositOfOil;

                    indicators = definedIndicatorData.indicatorOfOil;

                    break;

            }
        }
    }

    public void IndicatorChange(ChangeEventArgs e)
    {
        if (e.Value is not null)
        {
            indicator = e.Value.ToString();
            switch (type)
            {
                case "Вода":
                    method = methodData.methodsWater[indicator];
                    break;
                case "Нефть":
                    method = methodData.methodsOil[indicator];
                    break;

            }
        }
    }

    public void DepositChange(ChangeEventArgs e)
    {
        if (e.Value is not null)
        {
            depositActual = e.Value.ToString();
        }
    }

    public void NavigationToAddingNewTask()
    {
        navigation.NavigateTo("/labManagerAddingTask");
    }

    public void NavigationToHomePage()
    {
        navigation.NavigateTo("/labManager");
    }

    public void NavigationToViewAllAnalyzes()
    {
        navigation.NavigateTo("/labManagerViewAnalyzes");
    }

    void ShowNotification(Radzen.NotificationMessage message)
    {
        NotificationService.Notify(message);
    }
}


<style>
    .boxTwo{
        box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;
        display: flex;
        position: absolute;
        left: 50%;
        transform: translate(-50%, 10%);
        width: 68%;
        height: 600%;
        opacity: 1;
        mix-blend-mode: normal;
        background-color: rgba(169, 172, 251, 0.7);
        align-items: inherit;
        gap: 10px;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 10px;
        padding-bottom: 10px;
        border-radius: 20px;
        align-items: flex-start;
        justify-content: flex-start
    }
    .boxOne{
        box-shadow: rgba(0, 0, 0, 0.56) 0px 22px 70px 4px;
        position: absolute;
        left: 52%;
        transform: translate(-48%, 6%);
        opacity: 1;
        width: 68%;
        height: 600%;
        mix-blend-mode: normal;
        background-color: rgba(0, 0, 0, 0.2);
        align-items: inherit;
        gap: 10px;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 10px;
        padding-bottom: 10px;
        border-radius: 20px;
        align-items: flex-start;
        justify-content: flex-start
    }
    .icon{
        mix-blend-mode: normal;
        align-items: inherit;
        background-image: url('/images/image3.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        width: 50px;
        height: 75px
    }
    .inputStyle{
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);
        font-size: 20px;
        background-color: rgb(233, 231, 254);
        width: 80%;
        mix-blend-mode: normal;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        align-items: inherit;
        border-radius: 10px
    }
    .selectStyle{
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);
        font-family: Playfair Display;
        font-size: 20px;
        background-color: rgb(233, 231, 254);
        width: 80%;
        mix-blend-mode: normal;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
        align-items: inherit;
        border-radius: 10px
    }
    .pStyleOfButton{
        letter-spacing: 0;
        text-transform: none;
        text-align: center;
        vertical-align: middle;
        font-family: Playfair Display;
        font-size: 20px;
        color: rgba(0, 0, 0, 1);
        font-weight: 400;
        width: 100%
    }
    .pStyleOfSavingButton{
        letter-spacing: 0;
        text-transform: none;
        text-align: center;
        vertical-align: middle;
        font-family: Playfair Display;
        font-size: 18px;
        color: rgba(0, 0, 0, 1);
        font-weight: 400;
        width: 100%
    }
    .labelStyle{
        letter-spacing: 0;
        text-transform: none;
        text-align: left;
        vertical-align: middle;
        font-family: Playfair Display;
        font-size: 20px;
        color: rgba(0, 0, 0, 1);
        font-weight: 400;
        width: 100%
    }
    .savingButton{
        margin: 3%;
        position: absolute;
        bottom: 0;
        right: 0;
        width: 10%;
        background-color: white;
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.5);
        opacity: 1;
        mix-blend-mode: normal;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 10px;
        align-items: inherit;
        align-items: flex-start;
        justify-content: flex-start;
        border-radius: 20px
    }
    .buttonThree{
        box-shadow: rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px, rgba(17, 17, 26, 0.1) 0px 24px 80px;
        background-color: rgba(169, 172, 251, 0.7);
        position: absolute;
        width: 10%;
        left: 88%;
        transform: translate(-12%, 10%);
        opacity: 1;
        mix-blend-mode: normal;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 10px;
        align-items: inherit;
        align-items: flex-start;
        justify-content: flex-start;
        border-radius: 20px
    }
    .buttonTwo{
        box-shadow: rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px, rgba(17, 17, 26, 0.1) 0px 24px 80px;
        background-color: rgba(169, 172, 251, 0.7);
        position: absolute;
        width: 14%;
        left: 62%;
        transform: translate(-38%, 10%);
        opacity: 1;
        mix-blend-mode: normal;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 10px;
        align-items: inherit;
        align-items: flex-start;
        justify-content: flex-start;
        border-radius: 20px
    }
    .buttonOne{
        box-shadow: rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px, rgba(17, 17, 26, 0.1) 0px 24px 80px;
        background-color: rgba(169, 172, 251, 0.7);
        position: absolute;
        width: 14%;
        left: 75%;
        transform: translate(-25%, 10%);
        opacity: 1;
        mix-blend-mode: normal;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 10px;
        align-items: inherit;
        align-items: flex-start;
        justify-content: flex-start;
        border-radius: 20px
    }

/*    .buttonThree:hover {
        box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
        transform: translateY(-2px);
    }*/

    .savingButton:hover {
        box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
        transform: translateY(-2px);
    }

/*    .buttonTwo:hover {
        box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
        transform: translateY(-2px);
    }

    .buttonOne:hover {
        box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
        transform: translateY(-2px);
    }*/
    .button-27:hover {
        box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
        transform: translateY(-2px);
    }
</style>